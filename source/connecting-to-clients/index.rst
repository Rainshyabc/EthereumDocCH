.. _Connecting to Clients:

################################################################################
连接到以太坊客户端
################################################################################

通过 `JSON-RPC <https://github.com/ethereum/wiki/wiki/JSON-RPC>`_ ，在应用程序中与以太坊客户端进行交互可以有多种方法。
然而，通过JSON-RPC直接交互会给应用程序开发者带来许多负担，例如：

 - JSON-RPC协议实现
 - 新建和操作智能合约时的二进制编/解码
 - 256位数据类型
 - 管理员命令支持 - 例如，新建/管理地址，签名操作

为解决以上的这些问题，开发人员开发了一系列库。在这些库的帮助下，开发人员可以专注于实现他们的应用程序，
而不必实现与以太坊客户端和其生态系统进行交互的底层内容。

+----------------------+------------+-----------------------------------------------+
| 库                   | 语言       | 项目页面                                      |
+======================+============+===============================================+
| :ref:`web3.js`       | JavaScript | https://github.com/ethereum/web3.js           |
+----------------------+------------+-----------------------------------------------+
| :ref:`web3j`         | Java       | https://github.com/web3j/web3j                |
+----------------------+------------+-----------------------------------------------+
| :ref:`Nethereum`     | C# .NET    | https://github.com/Nethereum/Nethereum        |
+----------------------+------------+-----------------------------------------------+
| :ref:`ethereum-ruby` | Ruby       | https://github.com/DigixGlobal/ethereum-ruby  |
+----------------------+------------+-----------------------------------------------+
| :ref:`web3.py`       | Python     | https://github.com/ethereum/web3.py           |
+----------------------+------------+-----------------------------------------------+

库的详细信息可参见如下内容：

.. toctree::
   :maxdepth: 2

   web3.js/index.rst
   web3j/index.rst
   nethereum/index.rst
   ethereum-ruby/index.rst
   web3.py/index.rst

通过web3.js库新建和操作智能合约与交易的简介，可参见 :ref:`Accessing Contracts and Transactions` 。
